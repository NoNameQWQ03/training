#include <stdio.h>
#include <string.h>

#define MAX 1000
//2254200522
//菜单界面
void mainMenu() {
	printf("---------------------------\n");
	printf("-----  1、添加联系人  -----\n");
	printf("-----  2、显示联系人  -----\n");
	printf("-----  3、删除联系人  -----\n");
	printf("-----  4、查找联系人  -----\n");
	printf("-----  5、修改联系人  -----\n");
	printf("-----  6、清空联系人  -----\n");
	printf("-----  0、退出通讯录  -----\n");
	printf("---------------------------\n");
}

//联系人结构体
struct Person {
	char m_Name[50];		//姓名
	int m_Sex;				//性别
	int m_Age;				//年龄
	char m_Phone[15];		//电话
	char m_Address[100];	//地址
};

//通讯录结构体
struct Addressbooks {
	struct Person personArray[MAX];	//通讯录中保存的联系人数组
	int m_Size;						//通讯录中人员个数
};

//添加联系人
void addPerson(struct Addressbooks *abs) {
	//判断电话本是否满了
	if (abs->m_Size == MAX) {
		printf("通讯录已满，无法添加\n");
		return;
	} else {
		//姓名
		char name[50];
		printf("请输入姓名：\n");
		scanf("%s", name);
		strcpy(abs->personArray[abs->m_Size].m_Name, name);

		printf("请输入性别：\n");
		printf("1 -- 男\n");
		printf("2 -- 女\n");

		//性别
		int sex = 0;
		while (1) {
			scanf("%d", &sex);
			if (sex == 1 || sex == 2) {
				abs->personArray[abs->m_Size].m_Sex = sex;
				break;
			}
			printf("输入有误，请重新输入：");
		}

		//年龄
		printf("请输入年龄：\n");
		int age = 0;
		scanf("%d", &age);
		abs->personArray[abs->m_Size].m_Age = age;

		//联系电话
		printf("请输入联系电话：\n");
		char phone[15];
		scanf("%s", phone);
		strcpy(abs->personArray[abs->m_Size].m_Phone, phone);

		//家庭住址
		printf("请输入家庭住址：\n");
		char address[100];
		scanf("%s", address);
		strcpy(abs->personArray[abs->m_Size].m_Address, address);

		//更新通讯录人数
		abs->m_Size++;

		printf("添加成功\n");
		system("pause");
		system("cls");
	}
}

//显示所有联系人信息
void showPerson(struct Addressbooks *abs) {
	if (abs->m_Size == 0) {
		printf("当前记录为空\n");
	} else {
		for (int i = 0; i < abs->m_Size; i++) {
			printf("姓名：%s\t", abs->personArray[i].m_Name);
			printf("性别：%s\t", abs->personArray[i].m_Sex == 1 ? "男" : "女");
			printf("年龄：%d\t", abs->personArray[i].m_Age);
			printf("电话：%s\t", abs->personArray[i].m_Phone);
			printf("住址：%s\n", abs->personArray[i].m_Address);
		}
	}

	system("pause");
	system("cls");
}

//判断是否存在查询的人员，存在返回在数组中索引位置，不存在返回-1
int isExist(struct Addressbooks *abs, char *name) {
	for (int i = 0; i < abs->m_Size; i++) {
		if (strcmp(abs->personArray[i].m_Name, name) == 0) {
			return i;
		}
	}
	return -1;
}

//删除指定联系人信息
void deletePerson(struct Addressbooks *abs) {
	printf("请输入您要删除的联系人姓名：\n");
	char name[50];
	scanf("%s", name);

	int ret = isExist(abs, name);
	if (ret != -1) {
		for (int i = ret; i < abs->m_Size - 1; i++) {
			abs->personArray[i] = abs->personArray[i + 1];
		}
		abs->m_Size--;
		printf("删除成功\n");
	} else {
		printf("查无此人\n");
	}

	system("pause");
	system("cls");
}

//查找指定联系人信息
void findPerson(struct Addressbooks *abs) {
	printf("请输入您要查找的联系人姓名：\n");
	char name[50];
	scanf("%s", name);

	int ret = isExist(abs, name);
	if (ret != -1) {
		printf("姓名：%s\t", abs->personArray[ret].m_Name);
		printf("性别：%s\t", abs->personArray[ret].m_Sex == 1 ? "男" : "女");
		printf("年龄：%d\t", abs->personArray[ret].m_Age);
		printf("电话：%s\t", abs->personArray[ret].m_Phone);
		printf("住址：%s\n", abs->personArray[ret].m_Address);
	} else {
		printf("查无此人\n");
	}

	system("pause");
	system("cls");
}

//修改指定联系人信息
void modifyPerson(struct Addressbooks *abs) {
	printf("请输入您要修改的联系人姓名：\n");
	char name[50];
	scanf("%s", name);

	int ret = isExist(abs, name);
	if (ret != -1) {
		//姓名
		char newName[50];
		printf("请输入姓名：\n");
		scanf("%s", newName);
		strcpy(abs->personArray[ret].m_Name, newName);

		printf("请输入性别：\n");
		printf("1 -- 男\n");
		printf("2 -- 女\n");

		//性别
		int sex = 0;
		while (1) {
			scanf("%d", &sex);
			if (sex == 1 || sex == 2) {
				abs->personArray[ret].m_Sex = sex;
				break;
			}
			printf("输入有误，请重新输入：");
		}

		//年龄
		printf("请输入年龄：\n");
		int age = 0;
		scanf("%d", &age);
		abs->personArray[ret].m_Age = age;

		//联系电话
		printf("请输入联系电话：\n");
		char phone[15];
		scanf("%s", phone);
		strcpy(abs->personArray[ret].m_Phone, phone);

		//家庭住址
		printf("请输入家庭住址：\n");
		char address[100];
		scanf("%s", address);
		strcpy(abs->personArray[ret].m_Address, address);

		printf("修改成功\n");
	} else {
		printf("查无此人\n");
	}

	system("pause");
	system("cls");
}

//清空所有联系人
void cleanPerson(struct Addressbooks *abs) {
	abs->m_Size = 0;
	printf("通讯录已清空\n");
	system("pause");
	system("cls");
}

int main() {
	struct Addressbooks abs; //创建通讯录
	abs.m_Size = 0; //初始化通讯录人数为0

	int select = 0; //创建用户选择输入的变量
	while (1) {
		mainMenu(); //菜单调用
		scanf("%d", &select);
		switch (select) {
			case 1: //1、添加联系人
				addPerson(&abs);
				break;
			case 2: //2、显示联系人
				showPerson(&abs);
				break;
			case 3: //3、删除联系人
				deletePerson(&abs);
				break;
			case 4: //4、查找联系人
				findPerson(&abs);
				break;
			case 5: //5、修改联系人
				modifyPerson(&abs);
				break;
			case 6: //6、清空联系人
				cleanPerson(&abs);
				break;
			case 0: //0、退出通讯录
				printf("欢迎下次使用\n");
				system("pause");
				return 0;
			default:
				printf("输入错误，请重试\n");
				break;
		}
	}

	system("pause");
	return 0;
}
